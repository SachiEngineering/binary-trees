class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def isSameTree(s, t):
    stack = [(s, t)]
    while stack:
        node1, node2 = stack.pop()
        if not node1 and not node2:
            continue
        if not node1 or not node2 or node1.val != node2.val:
            return False
        stack.append((node1.left, node2.left))
        stack.append((node1.right, node2.right))
    return True

def solution(root, subRoot):
    if not root:
        return False

    stack = [root]
    while stack:
        node = stack.pop()
        if node:
            if node.val == subRoot.val and isSameTree(node, subRoot):
                return True
            stack.append(node.right)
            stack.append(node.left)
    return False

